name: Build PlutoBook Module

on: [push, pull_request]

jobs:
  build_sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Build sdist
        run: |
          python -m pip install -U pip build
          python -m build --sdist -Csetup-args=-Dsdist=true

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: ./dist/*.tar.gz

  build_wheels:
    runs-on: windows-latest
    env:
      MSYS: "winjitdebug"

    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4
      - name: Setup MSYS2
        uses: msys2/setup-msys2@cf96e00c0aab3788743aaf63b64146f0d383cee9 # v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            git
            mingw-w64-x86_64-expat
            mingw-w64-x86_64-icu
            mingw-w64-x86_64-freetype
            mingw-w64-x86_64-fontconfig
            mingw-w64-x86_64-harfbuzz
            mingw-w64-x86_64-cairo
            mingw-w64-x86_64-curl
            mingw-w64-x86_64-libjpeg-turbo
            mingw-w64-x86_64-libwebp
            mingw-w64-x86_64-meson
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-pkgconf
            mingw-w64-x86_64-python
            mingw-w64-x86_64-python-pip
            mingw-w64-x86_64-gcc
            
      - name: Build windows deps
        run: |
          cd windows-build
          meson setup build --prefix='${{ github.workspace }}/windows'
          meson compile -C build
          meson install -C build

      - name: Copy pkg-config
        run: cp /mingw64/bin/pkgconf.exe '${{ github.workspace }}/windows'
      - uses: actions/upload-artifact@v4
        with:
          name: plutobook-build-x86
          path: windows/
          
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16
        env:
          CIBW_BUILD: 'cp310-win_amd64 cp311-win_amd64 cp312-win_amd64'
          CIBW_ENVIRONMENT_WINDOWS: PKG_CONFIG='D:\a\_temp\msys64\mingw64\bin/pkg-config.EXE' PKG_CONFIG_PATH='${{ github.workspace }}/windows/lib/pkgconfig'
          
      - uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  upload_pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          password: ${{secrets.PYPI_API_TOKEN}}
