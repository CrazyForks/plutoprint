name: Build and Upload to PyPI

on: [push, pull_request]

jobs:
  build_sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Build sdist
        run: |
          python -m pip install -U pip build
          python -m build --sdist -Csetup-args=-Dsdist=true

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: ./dist/*.tar.gz

  build_linux_wheels:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' || contains(github.event.head_commit.message, '[build:wheels]')
    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        uses: pypa/cibuildwheel@v3.1.3
        env:
          CIBW_BUILD: |
            cp310-manylinux_x86_64
            cp311-manylinux_x86_64
            cp312-manylinux_x86_64
            cp313-manylinux_x86_64
            cp314-manylinux_x86_64
          CIBW_MANYLINUX_X86_64_IMAGE: ghcr.io/plutoprint/plutobook-manylinux_2_28_x86_64:main
          CIBW_BEFORE_BUILD_LINUX: >
            pip install auditwheel
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: >
            auditwheel repair -w {dest_dir} {wheel}
          CIBW_TEST_COMMAND: >
            python -c "import plutoprint; print(plutoprint.__build_info__)"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-linux-wheels
          path: ./wheelhouse/*.whl

  build_windows_wheels:
    if: github.ref_type == 'tag' || contains(github.event.head_commit.message, '[build:wheels]')
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install PlutoBook
        run: |
          curl -L https://github.com/betasammy/plutoprint/releases/download/v0.0.1/plutobook-win-x64.zip -o plutobook-win-x64.zip
          7z x plutobook-win-x64.zip -oplutobook
          sed -i "s|^prefix=.*|prefix=\${{ github.workspace }}/plutobook|" plutobook/lib/pkgconfig/plutobook.pc
          sed -i '/^Requires\.private/d' plutobook/lib/pkgconfig/plutobook.pc

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.1.3
        env:
          CIBW_BUILD: cp310-win_amd64 cp311-win_amd64 cp312-win_amd64 cp313-win_amd64 cp314-win_amd64
          CIBW_BEFORE_BUILD_WINDOWS: pip install delvewheel
          CIBW_ENVIRONMENT_WINDOWS: |
            PKG_CONFIG='${{ github.workspace }}/plutobook/bin/pkgconf.exe'
            PKG_CONFIG_PATH='${{ github.workspace }}/plutobook/lib/pkgconfig'
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: >
            delvewheel repair -vv -w {dest_dir} {wheel} --add-path ${{ github.workspace }}/plutobook/bin
          CIBW_TEST_COMMAND: >
            python -c "import plutoprint; print(plutoprint.__build_info__)"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-windows-wheels
          path: ./wheelhouse/*.whl

  upload_pypi:
    needs: [build_sdist, build_linux_wheels, build_windows_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: cibw-*
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
